library ieee;
use ieee.std_logic_1164.all;
use ieee.math_real.all;
use ieee.numeric_std.all;

entity transmissor is
	port (
		clock : in std_logic;
		reset : in std_logic;
		jogar : in std_logic;
		vitoria : in std_logic;
		derrota : in std_logic;
		dificuldade : in std_logic_vector(1 downto 0);
		botoes : in std_logic_vector(3 downto 0);
		buracos : in std_logic_vector(3 downto 0);
		contador_tempo : in std_logic_vector(11 downto 0);
		contador_agua : in std_logic_vector(7 downto 0);
		saida_serial : out std_logic;
		db_saida_serial : out std_logic;
		fim_transmissao : out std_logic
	);
end entity;

architecture behavioral of transmissor is
	component transmissor_df is
		port (
			clock : in std_logic;
			reset : in std_logic;
			jogar : in std_logic;
			vitoria : in std_logic;
			derrota : in std_logic;
			dificuldade : in std_logic_vector(1 downto 0);
			botoes : in std_logic_vector(3 downto 0);
			buracos : in std_logic_vector(3 downto 0);
			contador_tempo : in std_logic_vector(11 downto 0);
			contador_agua : in std_logic_vector(7 downto 0);
			saida_serial : out std_logic;
			db_saida_serial : out std_logic;
			fim_transmissao : out std_logic;
			partida_transmissao : out std_logic
		);
	end component;

	component transmissor_uc is
		port (
			clock : in std_logic;
			reset : in std_logic;
		);
	end component;

	begin

		uc : transmissor_uc 
		port map (
			clock => clock,	
			reset => reset
		);

		df : transmissor_df
		port map (
			clock => clock,
			reset => reset,
			jogar => jogar,
			vitoria => vitoria,
			derrota => derrota,
			dificuldade => dificuldade,
			botoes => botoes,
			buracos => buracos,
			contador_tempo => contador_tempo,
			contador_agua => contador_agua,
			saida_serial => saida_serial,
			db_saida_serial => db_saida_serial,
			fim_transmissao => fim_transmissao,
			partida_transmissao => partida_transmissao
		);
	
end architecture;